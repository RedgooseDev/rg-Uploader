{"version":3,"sources":["changeQueue.plugin.js","changeQueueStyle.plugin.js","dnd.plugin.js","preview.plugin.js","sizeinfo.plugin.js","thumbnail.plugin.js"],"names":["RG_ChangeQueue","options","loadVendor","defer","$","Deferred","window","loadedVendorSortable","resolve","head","document","getElementsByTagName","scriptElement","createElement","src","self","path_sortable","appendChild","n","interval","setInterval","Sortable","clearInterval","e","promise","_change","newIds","newFiles","index","app","queue","$queue","children","map","findItem","this","data","i","length","push","items","ids","files","endChangeItem","initEvent","vendorOptions","onEnd","sortable","get","name","init","parent","assignOption","vendor","done","addClass","eventListener","type","value","obj","extend","RG_ChangeQueueStyle","buttonsParams","title","iconName","default","$nav","$buttons","createButtons","each","k","o","$el","initButtonsEvent","append","on","hasClass","changeStyle","changeActiveButton","removeClass","filter","$container","style","RG_DragAndDrop","areaElements","externalAreaElements","fileDragAndDrop","area","File","FileList","FileReader","Blob","over","overHandler","stopPropagation","preventDefault","currentTarget","dataTransfer","dropEffect","dropHandler","notify","addEventListener","uploader","uploading","alert","lang","start","dnd","progress","RG_Preview","$preview","classNameNotImage","width","createPreview","str","find","prepend","updatePreview","$figure","css","attr","visiblePreview","sw","parseInt","height","id","$selectElement","file","split","fullSrc","RG_Sizeinfo","size","current","total","$body","wrapSelector","$current","$total","create","plugin","error","limitSizeTotal","update","text","util","bytesToSize","getSize","RG_Thumbnail","loadExternalFiles","loadedCroppie","cssEl","scriptEl","rel","href","url_croppieCSS","url_croppieJS","createContainer","con","wrap","bg","figure","meta","btn_done","btn_close","initEvents","close","RESIZE_EVENT","resize","actMobile","pass","isMobile","marginLeft","marginTop","left","top","croppie","rebuildCroppie","actDesktop","$win","resizeInterval","clearTimeout","setTimeout","isResize","save","destroyCroppie","boundary","mobileSize","Croppie","rebind","points","setZoom","zoom","destroy","result","output","then","res","uploadScript","post","image","getUniqueNumber","JSON","parse","state","response","message","doneCallback","format","console","log","open","bind","orientation","openCallback","closeCallback","callback","url","prototype","animation","quality","enableOrientation","viewport"],"mappings":"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","file":"../plugin.pkgd.js","sourcesContent":["function RG_ChangeQueue(options) {\n\n\tthis.name = 'Change Queue';\n\tthis.sortable = null;\n\n\tvar self = this;\n\tvar app = null;\n\n\n\t/**\n\t * load vendor\n\t *\n\t * @return {Object|Boolean}\n\t */\n\tfunction loadVendor()\n\t{\n\t\tvar defer = $.Deferred();\n\n\t\t// check loaded vendor\n\t\tif (window.loadedVendorSortable)\n\t\t{\n\t\t\tdefer.resolve();\n\t\t}\n\n\t\tvar head = document.getElementsByTagName('head')[0];\n\t\tvar scriptElement = document.createElement('script');\n\n\t\tscriptElement.src = self.options.path_sortable;\n\n\t\thead.appendChild(scriptElement);\n\n\t\tvar n = 0;\n\t\tvar interval = setInterval(function(){\n\t\t\tn++;\n\t\t\ttry {\n\t\t\t\tif (Sortable)\n\t\t\t\t{\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\twindow.loadedVendorSortable = true;\n\t\t\t\t\tdefer.resolve();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch(e) {}\n\t\t}, 50);\n\n\t\treturn defer.promise();\n\t}\n\n\t/**\n\t * end change item event\n\t */\n\tfunction _change()\n\t{\n\t\tvar newIds = [];\n\t\tvar newFiles = [];\n\t\tvar index = app.queue.$queue.children('li').map(function(){\n\t\t\treturn app.queue.findItem($(this).data('id'));\n\t\t});\n\n\t\tfor (var i=0; i<index.length; i++)\n\t\t{\n\t\t\tnewIds.push(app.queue.items.ids[index[i]]);\n\t\t\tnewFiles.push(app.queue.items.files[index[i]]);\n\t\t}\n\n\t\tapp.queue.items.ids = newIds;\n\t\tapp.queue.items.files = newFiles;\n\n\t\t// callback\n\t\tif (self.options.endChangeItem && typeof self.options.endChangeItem === 'function')\n\t\t{\n\t\t\tself.options.endChangeItem(app);\n\t\t}\n\t}\n\n\t/**\n\t * init event\n\t */\n\tfunction initEvent()\n\t{\n\t\tself.options.vendorOptions.onEnd = _change;\n\n\t\tself.sortable = new Sortable(app.queue.$queue.get(0), self.options.vendorOptions);\n\t}\n\n\t/**\n\t * init\n\t *\n\t * @Param {Object} parent\n\t */\n\tthis.init = function(parent)\n\t{\n\t\tapp = parent;\n\n\t\t// merge options\n\t\tthis.assignOption(options);\n\n\t\t// load vendor\n\t\tvar vendor = loadVendor();\n\n\t\tvendor.done(function(){\n\t\t\t// add class\n\t\t\tapp.queue.$queue.addClass('rg-plugin-changeQueue');\n\n\t\t\t// init event\n\t\t\tinitEvent();\n\t\t});\n\t};\n\n\t/**\n\t * event listener\n\t *\n\t * @Param {String} type\n\t * @Param {*} value\n\t */\n\tthis.eventListener = function(type, value)\n\t{\n\t\tswitch(type) {\n\t\t\tcase 'queue.uploadCompleteAll':\n\t\t\t\t_change();\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t/**\n\t * assignOption\n\t *\n\t * @Param {Object} obj\n\t */\n\tthis.assignOption = function(obj)\n\t{\n\t\tthis.options = $.extend(true, this.options, obj);\n\t}\n}\n\n\nRG_ChangeQueue.prototype.options = {\n\tpath_sortable : '../vendor/Sortable/Sortable.min.js',\n\tvendorOptions : {\n\t\tanimation : 150,\n\t},\n\tendChangeItem : function(app) {}\n};","function RG_ChangeQueueStyle() {\n\n\tthis.name = 'Change Queue Style';\n\tthis.buttonsParams = [\n\t\t{ name : 'list', title : 'list style', iconName : 'menu', default : true },\n\t\t{ name : 'web', title : 'web style', iconName : 'view_list', default : false },\n\t\t{ name : 'album', title : 'album style', iconName : 'view_module', default : false }\n\t];\n\tthis.$nav = null;\n\tthis.$buttons = null;\n\n\tvar self = this;\n\tvar app = null;\n\n\n\t/**\n\t * create buttons\n\t */\n\tvar createButtons = function()\n\t{\n\t\t$.each(self.buttonsParams, function(k, o){\n\t\t\tvar $el = $('<button type=\"button\" class=\"style-' + o.name + '\" title=\"' + o.title + '\" data-style=\"' + o.name + '\">' +\n\t\t\t\t'<i class=\"material-icons\">' + o.iconName + '</i>' +\n\t\t\t\t'</button>');\n\t\t\tinitButtonsEvent($el);\n\t\t\tself.$nav.append($el);\n\t\t});\n\t\tself.$buttons = self.$nav.children('button');\n\t};\n\n\t/**\n\t * init buttons event\n\t *\n\t * @Param {Object} $el\n\t */\n\tvar initButtonsEvent = function($el)\n\t{\n\t\t$el.on('click', function(e){\n\t\t\tif ($(this).hasClass('on')) return false;\n\t\t\tapp.queue.changeStyle($(this).data('style'));\n\t\t});\n\t};\n\n\t/**\n\t * change active button\n\t */\n\tvar changeActiveButton = function(name)\n\t{\n\t\t// change style\n\t\tself.$buttons.removeClass('on').filter('.style-' + name).addClass('on');\n\t};\n\n\n\t/**\n\t * init\n\t *\n\t * @Param {Object} parent\n\t */\n\tthis.init = function(parent)\n\t{\n\t\tapp = parent;\n\n\t\t// append comp\n\t\tself.$nav = $('<nav data-element=\"selectQueueStyle\"></nav>');\n\t\tapp.$container.children('header').append(self.$nav);\n\n\t\t// create buttons\n\t\tcreateButtons();\n\n\t\t// set active button\n\t\tchangeActiveButton(app.queue.style);\n\n\t};\n\n\t/**\n\t * event listener\n\t *\n\t * @Param {String} type\n\t * @Param {*} value\n\t */\n\tthis.eventListener = function(type, value)\n\t{\n\t\tswitch (type) {\n\t\t\t// change style\n\t\t\tcase 'queue.changeStyle':\n\t\t\t\tchangeActiveButton(value.style);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}","function RG_DragAndDrop() {\n\n\tthis.name = 'Drag And Drop';\n\tthis.areaElements = [];\n\n\tvar self = this;\n\tvar app = null;\n\tvar externalAreaElements = $('.rg-external-dropzone');\n\n\n\t/**\n\t * init file drag and drop event\n\t *\n\t * @Param {Array} area\n\t * @Return {Object}\n\t */\n\tvar fileDragAndDrop = function(area)\n\t{\n\t\tif (!window.File || !window.FileList || !window.FileReader || !window.Blob) return false;\n\t\tif (!area.length) return false;\n\n\t\tvar defer = $.Deferred();\n\t\tvar over = false;\n\n\t\t/**\n\t\t * dragover handler\n\t\t *\n\t\t * @Param {Object} e\n\t\t */\n\t\tvar overHandler = function(e)\n\t\t{\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\n\t\t\tif (e.type == 'dragover')\n\t\t\t{\n\t\t\t\tif (over) return false;\n\t\t\t\tover = true;\n\t\t\t\t$(e.currentTarget).addClass('drop-mode');\n\t\t\t\te.dataTransfer.dropEffect = 'copy';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tover = false;\n\t\t\t\t$(e.currentTarget).removeClass('drop-mode');\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\t/**\n\t\t * drop handler\n\t\t *\n\t\t * @Param {Object} e\n\t\t */\n\t\tvar dropHandler = function(e)\n\t\t{\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\n\t\t\toverHandler(e);\n\n\t\t\tvar files = (e.dataTransfer) ? e.dataTransfer.files : null;\n\t\t\tif (files && files.length)\n\t\t\t{\n\t\t\t\tdefer.notify(files);\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\t// set events\n\t\tfor (var i=0; i<area.length; i++)\n\t\t{\n\t\t\tarea[i].addEventListener('dragover', overHandler, false);\n\t\t\tarea[i].addEventListener('dragleave', overHandler, false);\n\t\t\tarea[i].addEventListener('drop', dropHandler, false);\n\t\t}\n\n\t\treturn defer.promise();\n\t};\n\n\t/**\n\t * done event\n\t *\n\t * @Param {FileList} files\n\t */\n\tvar done = function(files)\n\t{\n\t\tif (app.uploader.uploading)\n\t\t{\n\t\t\talert(app.lang('error_add_upload'));\n\t\t\treturn false;\n\t\t}\n\n\t\t// play upload\n\t\tapp.uploader.start(files || []);\n\t};\n\n\n\t/**\n\t * init\n\t *\n\t * @Param {Object} parent\n\t */\n\tthis.init = function(parent)\n\t{\n\t\tapp = parent;\n\n\t\t// push area elements\n\t\tthis.areaElements.push(app.queue.$queue.parent().get(0));\n\t\texternalAreaElements.each(function(){\n\t\t\tself.areaElements.push(this);\n\t\t});\n\n\t\t// init event\n\t\tif (this.areaElements.length)\n\t\t{\n\t\t\tvar dnd = fileDragAndDrop(this.areaElements);\n\t\t\tif (dnd && dnd.progress)\n\t\t\t{\n\t\t\t\tdnd.progress(done);\n\t\t\t}\n\t\t}\n\t}\n}","function RG_Preview() {\n\n\tthis.name = 'Preview';\n\tthis.$preview = null;\n\n\tvar self = this;\n\tvar app = null;\n\tvar classNameNotImage = 'not-image';\n\tvar width = 150;\n\n\n\t/**\n\t * create preview\n\t */\n\tvar createPreview = function()\n\t{\n\t\tvar str = '<div class=\"col preview\"><figure></figure></div>';\n\t\tself.$preview = $(str);\n\n\t\t// set width\n\t\tself.$preview.width(width);\n\n\t\t// append element\n\t\tapp.$container.find('[data-comp=queue]').prepend(self.$preview);\n\n\t\t// update\n\t\tupdatePreview();\n\t};\n\n\t/**\n\t * update preview\n\t *\n\t * @Param {String} src\n\t */\n\tvar updatePreview = function(src)\n\t{\n\t\tvar $figure = self.$preview.children('figure');\n\t\tif (src)\n\t\t{\n\t\t\t$figure\n\t\t\t\t.css('backgroundImage', 'url(\\'' + src + '\\')')\n\t\t\t\t.removeClass(classNameNotImage);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$figure.attr('style', '').addClass(classNameNotImage);\n\t\t}\n\t};\n\n\t/**\n\t * visible preview\n\t *\n\t * @Param {Boolean} src\n\t */\n\tvar visiblePreview = function(sw)\n\t{\n\t\tif (sw)\n\t\t{\n\t\t\tself.$preview.removeClass('hide');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tself.$preview.addClass('hide');\n\t\t}\n\t};\n\n\n\t/**\n\t * init\n\t *\n\t * @Param {Object} parent\n\t */\n\tthis.init = function(parent)\n\t{\n\t\tapp = parent;\n\n\t\t// get preview width\n\t\twidth = parseInt(app.options.queue.height || parent.$container.find('.body').height());\n\n\t\t// set container body height\n\t\tparent.$container.find('.body').height(width);\n\n\t\t// play create preview\n\t\tcreatePreview();\n\t};\n\n\t/**\n\t * event listener\n\t *\n\t * @Param {String} type\n\t * @Param {*} value\n\t */\n\tthis.eventListener = function(type, value)\n\t{\n\t\tswitch(type) {\n\t\t\t// select queue\n\t\t\tcase 'queue.selectQueue':\n\t\t\t\tvar id = value.$selectElement.data('id');\n\t\t\t\tvar n = app.queue.findItem(id);\n\t\t\t\tvar file = app.queue.items.files[n];\n\t\t\t\tvar src = (value.$selectElement.hasClass('selected') && (file.type.split('/')[0] == 'image')) ? file.fullSrc : null;\n\t\t\t\tupdatePreview(src);\n\t\t\t\tbreak;\n\n\t\t\t// change queue style\n\t\t\tcase 'queue.changeStyle':\n\t\t\t\tvisiblePreview( (value.style == 'list') );\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","function RG_Sizeinfo() {\n\n\tthis.name = 'Size info';\n\tthis.size = { current: 0, total: 0 };\n\n\tvar self = this;\n\tvar app = null;\n\tvar $body = null;\n\tvar wrapSelector = '.size-info';\n\tvar $current = null;\n\tvar $total = null;\n\n\n\t/**\n\t * create element\n\t *\n\t */\n\tvar create = function()\n\t{\n\t\tvar str = '<p>Size : <em data-text=\"currentSize\"></em>/<em data-text=\"totalSize\"></em></p>';\n\t\t$body.append(str);\n\t\t$current = $body.find('[data-text=currentSize]');\n\t\t$total = $body.find('[data-text=totalSize]');\n\t};\n\n\n\t/**\n\t * init\n\t *\n\t * @Param {Object} parent\n\t */\n\tthis.init = function(parent)\n\t{\n\t\tapp = parent;\n\t\t$body = parent.$container.find(wrapSelector);\n\n\t\t// not found $body element\n\t\tif (!$body.length)\n\t\t{\n\t\t\tapp.plugin.error(name);\n\t\t}\n\n\t\t// create elements\n\t\tcreate();\n\n\t\t// set size\n\t\tthis.size.total = app.options.limitSizeTotal;\n\n\t\t// update size\n\t\tthis.update();\n\t};\n\n\t/**\n\t * update\n\t */\n\tthis.update = function()\n\t{\n\t\t$current.text(app.util.bytesToSize(this.size.current));\n\t\t$total.text(app.util.bytesToSize(this.size.total));\n\t};\n\n\t/**\n\t * event listener\n\t *\n\t * @Param {String} type\n\t * @Param {*} value\n\t */\n\tthis.eventListener = function(type, value)\n\t{\n\t\tswitch(type) {\n\t\t\tcase 'queue.uploadComplete':\n\t\t\t\tself.size.current += value.file.size;\n\t\t\t\tself.update(app.queue.getSize());\n\t\t\t\tbreak;\n\n\t\t\tcase 'queue.removeQueue':\n\t\t\t\tself.size.current = app.queue.getSize();\n\t\t\t\tself.update();\n\t\t\t\tbreak;\n\t\t}\n\t}\n}","// croppie : http://foliotek.github.io/Croppie/\n\nfunction RG_Thumbnail(options) {\n\n\tthis.name = 'Make thumbnail';\n\n\tvar self = this;\n\tvar app = null;\n\tvar RESIZE_EVENT = 'resize.rgUploader';\n\tvar isMobile = false;\n\tvar resizeInterval = null;\n\n\tthis.file = null;\n\tthis.croppie = null;\n\tthis.$el = {\n\t\tcon : null,\n\t\twrap : null,\n\t\tbg : null,\n\t\tfigure : null,\n\t\tmeta : null,\n\t\tbtn_close : null,\n\t\tbtn_done : null\n\t};\n\n\n\t/**\n\t * load external vendor files\n\t */\n\tfunction loadExternalFiles()\n\t{\n\t\tif (window.loadedCroppie) return false;\n\n\t\tvar head = document.getElementsByTagName('head')[0];\n\t\tvar cssEl = document.createElement('link');\n\t\tvar scriptEl = document.createElement('script');\n\n\t\tcssEl.rel = 'stylesheet';\n\t\tcssEl.href = self.options.url_croppieCSS;\n\t\tscriptEl.src = self.options.url_croppieJS;\n\n\t\thead.appendChild(cssEl);\n\t\thead.appendChild(scriptEl);\n\n\t\twindow.loadedCroppie = true;\n\t}\n\n\t/**\n\t * create container\n\t */\n\tfunction createContainer()\n\t{\n\t\t// set elements\n\t\tself.$el.con = $('<div class=\"rg-plugin-thumbnail\">' +\n\t\t\t'<span class=\"bg\"></span>' +\n\t\t\t'<div class=\"wrap\">' +\n\t\t\t'<div class=\"img-wrap\"><figure></figure></div>' +\n\t\t\t'<div class=\"body\">' +\n\t\t\t'<div class=\"meta\"><p>message</p></div>' +\n\t\t\t'<nav>' +\n\t\t\t'<button type=\"button\" class=\"btn-done\"><i class=\"material-icons\">done</i></button>' +\n\t\t\t'<button type=\"button\" class=\"btn-close\"><i class=\"material-icons\">close</i></button>' +\n\t\t\t'</nav>' +\n\t\t\t'</div>' +\n\t\t\t'</div>' +\n\t\t\t'</div>');\n\t\tself.$el.wrap = self.$el.con.children('.wrap');\n\t\tself.$el.bg = self.$el.con.children('.bg');\n\t\tself.$el.figure = self.$el.con.find('.img-wrap figure');\n\t\tself.$el.meta = self.$el.con.find('.meta > p');\n\t\tself.$el.btn_done = self.$el.con.find('.btn-done');\n\t\tself.$el.btn_close = self.$el.con.find('.btn-close');\n\n\t\t// insert element\n\t\t$('body').append(self.$el.con);\n\t}\n\n\t/**\n\t * init events\n\t */\n\tfunction initEvents()\n\t{\n\t\t// close in background\n\t\tself.$el.bg.on('click', function(){\n\t\t\tself.close();\n\t\t});\n\n\t\t// close in close button\n\t\tself.$el.btn_close.on('click', function(){\n\t\t\tself.close();\n\t\t});\n\n\t\t// done\n\t\tself.$el.btn_done.on('click', done);\n\n\t\t// init resize event\n\t\t$(window).on(RESIZE_EVENT, resize);\n\t}\n\n\t/**\n\t * change mobile\n\t */\n\tfunction actMobile(pass)\n\t{\n\t\tif (!pass && isMobile) return false;\n\n\t\t// set isMobile\n\t\tisMobile = true;\n\n\t\t// change window size\n\t\tself.$el.wrap\n\t\t\t.width('100%').height('100%')\n\t\t\t.css({ marginLeft : 0, marginTop : 0, left: 0, top: 0 });\n\n\t\t// rebuild croppie\n\t\tif (self.croppie)\n\t\t{\n\t\t\trebuildCroppie(true);\n\t\t}\n\t}\n\n\t/**\n\t * change desktop\n\t */\n\tfunction actDesktop(pass)\n\t{\n\t\tif (!pass && !isMobile) return false;\n\n\t\t// set isMobile\n\t\tisMobile = false;\n\n\t\t// change window size\n\t\tself.$el.wrap\n\t\t\t.width(self.options.width).height(self.options.height)\n\t\t\t.css({\n\t\t\t\tmarginLeft : (0 - self.options.width * 0.5) + 'px',\n\t\t\t\tmarginTop : (0 - self.options.height * 0.5) + 'px',\n\t\t\t\tleft: '50%',\n\t\t\t\ttop: '50%'\n\t\t\t});\n\n\t\t// rebuild croppie\n\t\tif (self.croppie)\n\t\t{\n\t\t\trebuildCroppie(true);\n\t\t}\n\t}\n\n\t/**\n\t * resize event\n\t *\n\t * @Param {Object} e\n\t */\n\tfunction resize(e)\n\t{\n\t\tvar $win = $(window);\n\n\t\tif (!self.croppie)\n\t\t{\n\t\t\tclearTimeout(resizeInterval);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (resizeInterval)\n\t\t{\n\t\t\tclearTimeout(resizeInterval);\n\t\t}\n\n\t\tresizeInterval = setTimeout(function(){\n\t\t\t// 계속 모바일 사이즈상태일때 실행\n\t\t\tif (isMobile && ($win.width() < 640))\n\t\t\t{\n\t\t\t\tactMobile(true);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ($win.width() < 640)\n\t\t\t{\n\t\t\t\tactMobile(true);\n\t\t\t}\n\t\t\telse if ($win.width() > 640)\n\t\t\t{\n\t\t\t\tactDesktop(true);\n\t\t\t}\n\t\t}, 300);\n\t}\n\n\t/**\n\t * rebuild croppie\n\t *\n\t * @Param {Boolean} isResize\n\t */\n\tfunction rebuildCroppie(isResize)\n\t{\n\t\t// save option\n\t\tvar save = (isResize) ? self.croppie.get() : {};\n\n\t\t// destroy croppie\n\t\tdestroyCroppie();\n\n\t\t// build croppie\n\t\tself.options.croppie.boundary = {\n\t\t\twidth : (self.options.mobileSize > $(window).width()) ? $(window).width() : self.options.width,\n\t\t\theight : ((self.options.mobileSize > $(window).width()) ? $(window).height() : self.options.height)-60\n\t\t};\n\t\tself.croppie = new Croppie(self.$el.figure.get(0), self.options.croppie);\n\n\t\t// bind croppie\n\t\tif (isResize)\n\t\t{\n\t\t\tself.rebind({\n\t\t\t\tsrc : self.file.fullSrc,\n\t\t\t\tpoints : save.points\n\t\t\t}, function(){\n\t\t\t\tself.croppie.setZoom(save.zoom);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * destroy croppie\n\t */\n\tfunction destroyCroppie()\n\t{\n\t\tif (self.croppie)\n\t\t{\n\t\t\tself.croppie.destroy();\n\t\t\tself.croppie = null;\n\t\t}\n\t}\n\n\t/**\n\t * done event\n\t *\n\t * @Param {Object} e\n\t */\n\tfunction done(e)\n\t{\n\t\t// result\n\t\tself.croppie.result(self.options.output).then(function(res){\n\t\t\tif (self.options.uploadScript)\n\t\t\t{\n\t\t\t\t$.post(\n\t\t\t\t\tself.options.uploadScript,\n\t\t\t\t\t{\n\t\t\t\t\t\tname : self.file.name,\n\t\t\t\t\t\timage : res,\n\t\t\t\t\t\tid : app.util.getUniqueNumber()\n\t\t\t\t\t},\n\t\t\t\t\tfunction(res){\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tres = JSON.parse(res);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\talert('parse error');\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (res.state == 'error')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\talert(res.response.message);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (self.options.doneCallback)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tself.options.doneCallback(res.response, app, self.file);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (self.options.doneCallback)\n\t\t\t\t{\n\t\t\t\t\tself.options.doneCallback({\n\t\t\t\t\t\tid : app.util.getUniqueNumber(),\n\t\t\t\t\t\tname : 'thumb-' + self.file.name,\n\t\t\t\t\t\tsrc : res,\n\t\t\t\t\t\ttype : 'image/' + self.options.output.format,\n\t\t\t\t\t\tsize : 0\n\t\t\t\t\t}, app, self.file);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// close\n\t\t\tself.close();\n\t\t}, function (error) {\n\t\t\tconsole.log('ERROR', error);\n\t\t});\n\t}\n\n\n\t/**\n\t * init\n\t *\n\t * @Param {Object} parent\n\t */\n\tthis.init = function(parent)\n\t{\n\t\tapp = parent;\n\n\t\t// merge options\n\t\tthis.assignOption(options);\n\n\t\t// load files\n\t\tloadExternalFiles();\n\n\t\t// create container\n\t\tcreateContainer();\n\n\t\t// init events\n\t\tinitEvents();\n\t};\n\n\t/**\n\t * open window\n\t *\n\t * @Param {Object} file\n\t * @Param {Object} bind\n\t */\n\tthis.open = function(file, bind)\n\t{\n\t\tbind = bind || {};\n\n\t\t// show window\n\t\tthis.$el.con.addClass('show');\n\t\t$('html').addClass('rg-popup');\n\n\t\t// set file value\n\t\tthis.file = file;\n\n\t\t// act pc & mobile\n\t\tif ($(window).width() < this.options.mobileSize)\n\t\t{\n\t\t\tactMobile(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tactDesktop(true);\n\t\t}\n\n\t\t// rebuild croppie\n\t\trebuildCroppie();\n\t\t// bind image\n\t\tthis.rebind({\n\t\t\tsrc : this.file.fullSrc,\n\t\t\tpoints : bind.points,\n\t\t\torientation : bind.orientation\n\t\t}, function(){\n\t\t\tself.croppie.setZoom(bind.zoom || 0.1);\n\t\t});\n\n\t\t// input state\n\t\tthis.$el.meta.text('output size: ' + this.options.output.size.width + '*' + this.options.output.size.height);\n\n\t\t// callback open window\n\t\tif (this.options.openCallback)\n\t\t{\n\t\t\tthis.options.openCallback(app);\n\t\t}\n\t};\n\n\t/**\n\t * close window\n\t */\n\tthis.close = function()\n\t{\n\t\tdestroyCroppie();\n\t\tthis.file = null;\n\t\tthis.$el.con.removeClass('show');\n\t\t$('html').removeClass('rg-popup');\n\n\t\t// callback close window\n\t\tif (this.options.closeCallback)\n\t\t{\n\t\t\tthis.options.closeCallback(app);\n\t\t}\n\t};\n\n\t/**\n\t * rebind\n\t *\n\t * @Param {Object} options\n\t * @Param {Function} callback\n\t */\n\tthis.rebind = function(options, callback)\n\t{\n\t\tthis.croppie.bind({\n\t\t\turl : options.src,\n\t\t\tpoints : (options.points) ? options.points : [],\n\t\t\torientation : (options.orientation) ? options.orientation : 1\n\t\t}, function(){\n\t\t\tif (callback) callback();\n\t\t});\n\t};\n\n\t/**\n\t * assignOption\n\t *\n\t * @Param {Object} obj\n\t */\n\tthis.assignOption = function(obj)\n\t{\n\t\tthis.options = $.extend(true, this.options, obj);\n\t}\n}\n\nRG_Thumbnail.prototype.options = {\n\twidth : 640,\n\theight : 480,\n\tmobileSize : 640,\n\turl_croppieCSS : '../vendor/Croppie/croppie.css',\n\turl_croppieJS : '../vendor/Croppie/croppie.min.js',\n\tuploadScript : '',\n\toutput : {\n\t\ttype : 'canvas',\n\t\tquality : .75,\n\t\tformat : 'jpeg',\n\t\tsize : { width : 150, height : 150 }\n\t},\n\tcroppie : {\n\t\tenableOrientation: true,\n\t\tboundary : { width: 640, height: 480-60 },\n\t\tviewport : { width: 150, height: 150, type: 'square' }\n\t},\n\tdoneCallback : null,\n\topenCallback : null,\n\tcloseCallback : null\n};"]}